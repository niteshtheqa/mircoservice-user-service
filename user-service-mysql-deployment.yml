apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
      run: user-service
  template:
    metadata:
      labels:
        app: user-service
        run: user-service
    spec:
      containers:
      - name: user-service
        image: nitesh2611/user-service:09  # Replace with the correct image for user-service
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi 
        ports:
        - containerPort: 8081  # Assuming the user-service listens on port 8080, replace if needed

      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "admin123" # Replace with a secure password
        - name: MYSQL_DATABASE
          value: "user_db"             # Optional: create a default database for user-service
        - name: MYSQL_USER
          value: "usersvc"          # Optional: add a specific user
        - name: MYSQL_PASSWORD
          value: "password"      # Optional: password for the user
        ports:
        - containerPort: 3306
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        emptyDir: {} # You can replace this with a PersistentVolumeClaim for persistent storage

---

apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8081   # Expose the port that the user-service container listens on
      targetPort: 8081
  type: LoadBalancer    

---

apiVersion: v1
kind: Service
metadata:
  name: user-service-mysql
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 3306    # Expose the MySQL service on port 3306
      targetPort: 3306
  type: ClusterIP # MySQL service within the cluster, no external exposure
